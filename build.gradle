plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'  // Using an older, stable Kotlin version
    id 'application'
}

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

group 'furhatos.app'
version '1.0.0'

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        //Defines what jvm bytecode to use, 1.8 rather than 1.6
        jvmTarget = "1.8"
        apiVersion = "1.8"
        languageVersion = "1.8"
    }
}

compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        //Defines what jvm bytecode to use, 1.8 rather than 1.6
        jvmTarget = "1.8"
        apiVersion = "1.8"
        languageVersion = "1.8"
    }
}

repositories {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://s3-eu-west-1.amazonaws.com/furhat-maven/releases"}
        maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    }
}

dependencies {
    // Furhat SDK
    implementation 'com.furhatrobotics.furhatos:furhat-commons:2.7.1'
    implementation 'com.furhatrobotics.assets:StandardLibraryCollection:1.2.0'

    // Kotlin standard library
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // JSON parsing
    implementation 'com.google.code.gson:gson:2.8.9'

    // Logging
    implementation 'ch.qos.logback:logback-classic:1.2.11'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

application {
    mainClass.set("/Users/steve/Downloads/tutorials-main/medicalassistant/src/main/kotlin/furhatos/app/medicalassistant")
}

sourceSets {
    main {
        resources {
            srcDirs = ['/Users/steve/Downloads/tutorials-main/medicalassistant/src/main/resources']
        }
    }
}

jar {
    def lowerCasedName = baseName.toLowerCase()
    def normalizedName = lowerCasedName.substring(0,1).toUpperCase() + lowerCasedName.substring(1)
    manifest.attributes(
            'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
            'Main-Class': "furhatos.app.${lowerCasedName}.${normalizedName}Skill"
    )
}


